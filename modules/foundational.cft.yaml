AWSTemplateFormatVersion: '2010-09-09'
Description: Sysdig Secure Onboarding
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Sysdig Assigned Settings (Do not change)
      Parameters:
      - NameSuffix
      - ExternalID
      - TrustedIdentity
      - IsOrganizational
      - OrganizationalUnitIDs
      - Partition
      - RootOUID
      - IncludeOUIDs
      - IncludeAccounts
      - ExcludeAccounts
    ParameterLabels:
      NameSuffix:
        default: Name Suffix
      ExternalID:
        default: External ID
      TrustedIdentity:
        default: Trusted Identity
      IsOrganizational:
        default: Is Organizational
      OrganizationalUnitIDs:
        default: (TO BE DEPRECATED Please work with Sysdig to migrate and use IncludeOUIDs) Organizational Unit IDs
      Partition:
        default: AWS Partition
      RootOUID:
        default: Root Organization Unit ID
      IncludeOUIDs:
        default: Include Organizational Unit IDs
      IncludeAccounts:
        default: Include AWS accounts
      ExcludeAccounts:
        default: Exclude AWS accounts
Parameters:
  NameSuffix:
    Type: String
    Description: Suffix to append to the resource name identifiers
    AllowedPattern: '[0-9a-z]+'
    MaxLength: 8
    MinLength: 4
  ExternalID:
    Type: String
    Description: Sysdig assigned token that proves you own this account
  TrustedIdentity:
    Type: String
    Description: The Role in Sysdig's AWS Account with permissions to your account
  IsOrganizational:
    Type: String
    Description: Install into an organization
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'
  OrganizationalUnitIDs:
    Type: CommaDelimitedList
    Description: (WARNING - TO BE DEPRECATED Please work with Sysdig to migrate your installs to use IncludeOUIDs instead) Comma separated list of organizational unit IDs to deploy
  Partition:
    Type: String
    Description: AWS Partition of your account or organization to create resources in
    Default: 'aws'
  RootOUID:
    Type: CommaDelimitedList
    Description: Root Organizational Unit ID of your AWS organization
  IncludeOUIDs:
    Type: CommaDelimitedList
    Description: Comma separated list of organizational unit IDs to be included for deployment
  IncludeAccounts:
    Type: CommaDelimitedList
    Description: Comma separated list of AWS accounts in your organization to be included for deployment
  ExcludeAccounts:
    Type: CommaDelimitedList
    Description: Comma separated list of AWS accounts in your organization to be excluded for deployment
Conditions:
  IsOrganizational:
    Fn::Equals:
    - Ref: IsOrganizational
    - 'true'
  # First check if old param OrganizationalUnitIDs configured - support till we DEPRECATE it
  IsOldOuidConfigured:
    !And
    - !Condition IsOrganizational
    - !Not
      - !Equals
        - !Join ["", !Ref OrganizationalUnitIDs]
        - ''

  # Else, check for new Inclusion and Exclusion params
  # INCLUSIONS
  OUInclusionsConfigured:
    !And
    - !Condition IsOrganizational
    - !Not
      - !Equals
        - !Join ["", !Ref IncludeOUIDs]
        - ''
  AccountInclusionsConfigured:
    !And
    - !Condition IsOrganizational
    - !Not
      - !Equals
        - !Join ["", !Ref IncludeAccounts]
        - ''
  # -----------------------------------------------------------------------------------------------------
  # Remove below condition once AWS issue is fixed and replace with using UNION filter -
  # https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-cloudformation/issues/100
  # -----------------------------------------------------------------------------------------------------
  # XXX: due to AWS bug of not having UNION filter fully working, there is no way to add those extra accounts requested.
  # to not miss out on those extra accounts, deploy the cloud resources across entire org and noop the UNION filter.
  # i.e till we can't deploy UNION, we deploy it all
  AllowedInclusions:
    !And
    - !Condition OUInclusionsConfigured
    - !Not
      - !Condition AccountInclusionsConfigured

  # EXCLUSIONS
  # cannot do OU exclusions from ExcludeOUIDs since CFT templates are static and don't have a way to fetch dynamic data from AWS
  AccountExclusionsConfigured:
    !And
    - !Condition IsOrganizational
    - !Equals
      - !Join ["", !Ref IncludeAccounts]
      - ''
    - !Not
      - !Equals
        - !Join ["", !Ref ExcludeAccounts]
        - ''
Resources:
  ConfigPostureRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sysdig-secure-posture-${NameSuffix}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS:
              Ref: TrustedIdentity
          Action: sts:AssumeRole
          Condition:
            StringEquals:
              sts:ExternalId:
                Ref: ExternalID
      ManagedPolicyArns:
      - !Sub arn:${Partition}:iam::aws:policy/SecurityAudit
      Policies:
      - PolicyName: !Sub sysdig-secure-posture-${NameSuffix}
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: elasticfilesystem:DescribeAccessPoints
            Resource: '*'
          - Effect: Allow
            Action:
            - waf-regional:ListRules
            - waf-regional:ListRuleGroups
            Resource:
            - !Sub arn:${Partition}:waf-regional:*:*:rule/*
            - !Sub arn:${Partition}:waf-regional:*:*:rulegroup/*
          - Effect: Allow
            Action: macie2:ListClassificationJobs
            Resource: '*'
          - Effect: Allow
            Action:
            - lambda:GetRuntimeManagementConfig
            - lambda:GetFunction
            Resource: '*'
          - Effect: Allow
            Action: account:GetContactInformation
            Resource: '*'
          - Effect: "Allow"
            Action: "bedrock:ListAgents"
            Resource: "*"
          - Effect: "Allow"
            Action: "bedrock:GetAgent"
            Resource: "*"
          - Effect: "Allow"
            Action: "bedrock:ListKnowledgeBases"
            Resource: "*"
          - Effect: "Allow"
            Action: "bedrock:GetKnowledgeBase"
            Resource: "*"
  OnboardingRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sysdig-secure-onboarding-${NameSuffix}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS:
              Ref: TrustedIdentity
          Action: sts:AssumeRole
          Condition:
            StringEquals:
              sts:ExternalId:
                Ref: ExternalID
      ManagedPolicyArns:
        Fn::If:
        - IsOrganizational
        - - !Sub arn:${Partition}:iam::aws:policy/AWSOrganizationsReadOnlyAccess
        - - !Ref AWS::NoValue
      Policies:
      - PolicyName: !Sub sysdig-secure-onboarding-${NameSuffix}
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - account:Get*
            - account:List*
            Resource: '*'
  OrganizationStackSet:
    Type: AWS::CloudFormation::StackSet
    Condition: IsOrganizational
    Properties:
      StackSetName: !Sub sysdig-secure-organization-${NameSuffix}
      Description: Creates IAM roles within an AWS organization
      PermissionModel: SERVICE_MANAGED
      Capabilities:
      - CAPABILITY_NAMED_IAM
      AutoDeployment:
        Enabled: true
        RetainStacksOnAccountRemoval: false
      ManagedExecution:
        Active: true
      OperationPreferences:
        MaxConcurrentPercentage: 100
        FailureTolerancePercentage: 90
        ConcurrencyMode: SOFT_FAILURE_TOLERANCE
      Parameters:
      - ParameterKey: NameSuffix
        ParameterValue:
          Ref: NameSuffix
      - ParameterKey: TrustedIdentity
        ParameterValue:
          Ref: TrustedIdentity
      - ParameterKey: ExternalID
        ParameterValue:
          Ref: ExternalID
      - ParameterKey: Partition
        ParameterValue:
          Ref: Partition
      StackInstancesGroup:
      - DeploymentTargets:
          OrganizationalUnitIds:
            Fn::If:
            - IsOldOuidConfigured
            - !Ref OrganizationalUnitIDs
            - Fn::If:
              - AllowedInclusions
              - !Ref IncludeOUIDs
              - !Ref RootOUID
          AccountFilterType:
            Fn::If:
            - IsOldOuidConfigured
            - !Ref 'AWS::NoValue'
            - Fn::If:
              - AccountExclusionsConfigured
              - "DIFFERENCE"
              - "NONE"
          Accounts:
            Fn::If:
            - IsOldOuidConfigured
            - !Ref 'AWS::NoValue'
            - Fn::If:
              - AccountExclusionsConfigured
              - !Ref ExcludeAccounts
              - !Ref 'AWS::NoValue'
        Regions:
        - Ref: AWS::Region
      TemplateBody: |
        AWSTemplateFormatVersion: "2010-09-09"
        Description: IAM Role for Agentless
        Parameters:
          NameSuffix:
            Type: String
            Description: Suffix to append to the resource name identifiers
            AllowedPattern: "[0-9a-z]+"
            MaxLength: 8
            MinLength: 4
          TrustedIdentity:
            Type: String
            Description: Trusted identity
          ExternalID:
            Type: String
            Description: external ID
          Partition:
            Type: String
            Description: AWS Partition of your account or organization to create resources in

        Resources:
          ConfigPostureRole:
            Type: "AWS::IAM::Role"
            Properties:
              RoleName: !Sub sysdig-secure-posture-${NameSuffix}
              AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                - Effect: "Allow"
                  Principal:
                    AWS: !Ref TrustedIdentity
                  Action: "sts:AssumeRole"
                  Condition:
                    StringEquals:
                      sts:ExternalId: !Ref ExternalID
              ManagedPolicyArns:
              - !Sub arn:${Partition}:iam::aws:policy/SecurityAudit
              Policies:
              - PolicyName: !Sub sysdig-secure-posture-${NameSuffix}
                PolicyDocument:
                  Version: "2012-10-17"
                  Statement:
                  - Effect: "Allow"
                    Action: "elasticfilesystem:DescribeAccessPoints"
                    Resource: "*"
                  - Effect: "Allow"
                    Action:
                    - "waf-regional:ListRules"
                    - "waf-regional:ListRuleGroups"
                    Resource:
                    - !Sub arn:${Partition}:waf-regional:*:*:rule/*
                    - !Sub arn:${Partition}:waf-regional:*:*:rulegroup/*
                  - Effect: "Allow"
                    Action: "macie2:ListClassificationJobs"
                    Resource: "*"
                  - Effect: "Allow"
                    Action:
                    - "lambda:GetRuntimeManagementConfig"
                    - "lambda:GetFunction"
                    Resource: "*"
                  - Effect: "Allow"
                    Action: "account:GetContactInformation"
                    Resource: "*"
                  - Effect: "Allow"
                    Action: "bedrock:ListAgents"
                    Resource: "*"
                  - Effect: "Allow"
                    Action: "bedrock:GetAgent"
                    Resource: "*"
                  - Effect: "Allow"
                    Action: "bedrock:ListKnowledgeBases"
                    Resource: "*"
                  - Effect: "Allow"
                    Action: "bedrock:GetKnowledgeBase"
                    Resource: "*"
          OnboardingRole:
            Type: AWS::IAM::Role
            Properties:
              RoleName: !Sub sysdig-secure-onboarding-${NameSuffix}
              AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                - Effect: Allow
                  Principal:
                    AWS: !Ref TrustedIdentity
                  Action: sts:AssumeRole
                  Condition:
                    StringEquals:
                      sts:ExternalId: !Ref ExternalID
              Policies:
              - PolicyName: !Sub sysdig-secure-onboarding-${NameSuffix}
                PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                  - Effect: Allow
                    Action:
                    - account:Get*
                    - account:List*
                    Resource: '*'

Outputs:
  ConfigPostureRoleARN:
    Description: ARN of the role for config posture
    Value:
      Fn::Sub: ${ConfigPostureRole.Arn}
  OnboardingRoleARN:
    Description: ARN of the onboarding role
    Value:
      Fn::Sub: ${OnboardingRole.Arn}
