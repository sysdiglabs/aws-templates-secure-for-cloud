AWSTemplateFormatVersion: "2010-09-09"
Description: Sysdig for Cloud - AWS Edition

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Sysdig Settings"
        Parameters:
          - SysdigSecureEndpoint
          - SysdigSecureAPIToken

      - Label:
          default: "Modules to Deploy"
        Parameters:
          - CloudBenchDeploy
          - CloudConnectorDeploy
          - ECRImageScanningDeploy
          - ECSImageScanningDeploy

      - Label:
          default: "Existing Infrastructure"
        Parameters:
          - ExistentECSCluster
          - ExistentECSClusterVPC
          - ExistentECSClusterPrivateSubnets

    ParameterLabels:
      SysdigSecureEndpoint:
        default: "Sysdig Secure Endpoint"
      SysdigSecureAPIToken:
        default: "Sysdig Secure API Token"
      CloudBenchDeploy:
        default: "Do you want to deploy Cloud Security Posture Management / Compliance?"
      CloudConnectorDeploy:
        default: "Do you want to deploy Real-Time Threat Investigation?"
      ECRImageScanningDeploy:
        default: "Do you want to deploy ECR Image Registry Scanning?"
      ECSImageScanningDeploy:
        default: "Do you want to deploy Fargate Image Scanning?"
      ExistentECSCluster:
        default: "ECS Cluster Name"
      ExistentECSClusterVPC:
        default: "VPC Id"
      ExistentECSClusterPrivateSubnets:
        default: "Private subnet Id's"

Parameters:
  CloudBenchDeploy:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Default: "Yes"

  CloudConnectorDeploy:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Default: "Yes"

  ECRImageScanningDeploy:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Default: "Yes"

  ECSImageScanningDeploy:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Default: "Yes"

  ExistentECSCluster:
    Type: String
    Default: ""
    Description: Leave it blank to let us to deploy the infrastructure required for running Sysdig for Cloud
  ExistentECSClusterVPC:
    Type: String
    Default: ""
    Description: Leave it blank to let us to deploy the infrastructure required for running Sysdig for Cloud
  ExistentECSClusterPrivateSubnets:
    Type: List<String>
    Default: ""
    Description: Leave it blank to let us to deploy the infrastructure required for running Sysdig for Cloud

  SysdigSecureAPIToken:
    Type: String
    NoEcho: true
  SysdigSecureEndpoint:
    Type: String
    Default: "https://app.sysdigcloud.com"

Conditions:
  DeployECRImageScanning: !Equals [!Ref ECRImageScanningDeploy, "Yes"]
  DeployCloudConnector: !Equals [!Ref CloudConnectorDeploy, "Yes"]
  DeployCloudBench: !Equals [ !Ref CloudBenchDeploy, "Yes" ]
  RequiresNewECSCluster:
    Fn::Or:
      - Fn::Equals:
        - !Ref ExistentECSCluster
        - ""
      - Fn::Equals:
        - !Ref ExistentECSClusterVPC
        - ""
      - Fn::Equals:
        - !Join [",", !Ref ExistentECSClusterPrivateSubnets]
        - ""
  DeployNewECSCluster: !And
       - !Or
         - !Condition DeployCloudConnector
         - !Condition DeployCloudBench
       - !Condition RequiresNewECSCluster
  DeployECSImageScanning: !Equals [!Ref ECSImageScanningDeploy, "Yes"]

Resources:
  S3ConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  SysdigSecureAPITokenParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: SysdigSecureAPIToken
      Description: "Sysdig Secure API Token"
      Type: String
      Value: !Ref SysdigSecureAPIToken

  SysdigSecureEndpointParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: SysdigSecureEndpoint
      Description: "Sysdig Secure endpoint"
      Type: String
      Value: !Ref SysdigSecureEndpoint

  ECRImageScanningStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployECRImageScanning
    Properties:
      TemplateURL: ./ECRImageScanning.yaml

  ECSImageScanningStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployECSImageScanning
    Properties:
      TemplateURL: ./ECSImageScanning.yaml

  ECSFargateClusterStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployNewECSCluster
    Properties:
      TemplateURL: ./ECSFargateCluster.yaml

  CloudConnectorStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployCloudConnector
    Properties:
      TemplateURL: ./CloudConnector.yaml
      Parameters:
        ECSCluster: !If [ DeployNewECSCluster, !GetAtt ["ECSFargateClusterStack", "Outputs.ClusterName"], !Ref ExistentECSCluster ]
        VPC: !If [ DeployNewECSCluster, !GetAtt ["ECSFargateClusterStack", "Outputs.VPC"], !Ref ExistentECSClusterVPC ]
        Subnets: !If [ DeployNewECSCluster, !GetAtt ["ECSFargateClusterStack", "Outputs.PrivateSubnets"], !Join [",", !Ref ExistentECSClusterPrivateSubnets] ]
        S3ConfigBucket: !Ref S3ConfigBucket

  CloudBenchStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployCloudBench
    Properties:
      TemplateURL: ./CloudBench.yaml
      Parameters:
        ECSCluster: !If [ DeployNewECSCluster, !GetAtt [ "ECSFargateClusterStack", "Outputs.ClusterName" ], !Ref ExistentECSCluster ]
        VPC: !If [ DeployNewECSCluster, !GetAtt [ "ECSFargateClusterStack", "Outputs.VPC" ], !Ref ExistentECSClusterVPC ]
        Subnets: !If [ DeployNewECSCluster, !GetAtt [ "ECSFargateClusterStack", "Outputs.PrivateSubnets" ], !Join [ ",", !Ref ExistentECSClusterPrivateSubnets ] ]
        SysdigSecureEndpoint: !Ref SysdigSecureEndpointParameter
        SysdigSecureAPIToken: !Ref SysdigSecureAPITokenParameter
        S3ConfigBucket: !Ref S3ConfigBucket

