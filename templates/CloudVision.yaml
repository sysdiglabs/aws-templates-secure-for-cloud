AWSTemplateFormatVersion: "2010-09-09"
Description: Sysdig CloudVision for AWS

Parameters:
  CloudBenchDeploy:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: >
      Choose if you want to deploy the CloudBench for Cloud Benchmarks.
    Default: "Yes"

  CloudConnectorDeploy:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: >
      Choose if you want to deploy the CloudConnector for CloudTrail
    Default: "Yes"

  ECRImageScanningDeploy:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: >
      Choose if you want to deploy the ECR Repository Image Scanning feature
    Default: "Yes"

  ECSImageScanningDeploy:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: >
      Choose if you want to deploy the ECS Image Scanning feature
    Default: "Yes"

  ExistentECSCluster:
    Type: String
    Description: Enter ECS Fargate Cluster where deploy the CloudVision workload if you don't want to create a new one
    Default: ""
  ExistentECSClusterVPC:
    Type: String
    Description: Enter VPC where the CloudVision workload will be deployed if you don't want to create a new cluster
    Default: ""
  ExistentECSClusterPublicSubnets:
    Type: List<String>
    Description: Enter Public Subnets where the CloudVision LoadBalancers will be deployed if you don't want to create a new cluster
    Default: ""
  ExistentECSClusterPrivateSubnets:
    Type: List<String>
    Description: Enter Private Subnets where the CloudVision workload will be deployed if you don't want to create a new cluster
    Default: ""

  SysdigSecureAPIToken:
    Type: String
    Description: Enter your Sysdig Secure API Token
    NoEcho: true
  SysdigSecureEndpoint:
    Type: String
    Description: Enter your Sysdig Secure Endpoint
    Default: "https://secure.sysdig.com"

Conditions:
  DeployECRImageScanning: !Equals [!Ref ECRImageScanningDeploy, "Yes"]
  DeployCloudConnector: !Equals [!Ref CloudConnectorDeploy, "Yes"]
  DeployCloudBench: !Equals [ !Ref CloudBenchDeploy, "Yes" ]
  RequiresNewECSCluster:
    Fn::Or:
      - Fn::Equals:
        - !Ref ExistentECSCluster
        - ""
      - Fn::Equals:
        - !Ref ExistentECSClusterVPC
        - ""
      - Fn::Equals:
        - !Join [",", !Ref ExistentECSClusterPublicSubnets]
        - ""
      - Fn::Equals:
        - !Join [",", !Ref ExistentECSClusterPrivateSubnets]
        - ""
  DeployNewECSCluster: !And
       - !Or
         - !Condition DeployCloudConnector
         - !Condition DeployCloudBench
       - !Condition RequiresNewECSCluster
  DeployECSImageScanning: !Equals [!Ref ECSImageScanningDeploy, "Yes"]

Resources:
  S3ConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled


  SysdigSecureAPITokenParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: SysdigSecureAPIToken
      Description: "Sysdig Secure API Token"
      Type: String
      Value: !Ref SysdigSecureAPIToken

  SysdigSecureEndpointParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: SysdigSecureEndpoint
      Description: "Sysdig Secure endpoint"
      Type: String
      Value: !Ref SysdigSecureEndpoint

  ECRImageScanningStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployECRImageScanning
    Properties:
      TemplateURL: ./ECRImageScanning.yaml

  ECSImageScanningStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployECSImageScanning
    Properties:
      TemplateURL: ./ECSImageScanning.yaml

  ECSFargateClusterStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployNewECSCluster
    Properties:
      TemplateURL: ./ECSFargateCluster.yaml

  CloudConnectorStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployCloudConnector
    Properties:
      TemplateURL: ./CloudConnector.yaml
      Parameters:
        ECSCluster: !If [ DeployNewECSCluster, !GetAtt ["ECSFargateClusterStack", "Outputs.ClusterName"], !Ref ExistentECSCluster ]
        VPC: !If [ DeployNewECSCluster, !GetAtt ["ECSFargateClusterStack", "Outputs.VPC"], !Ref ExistentECSClusterVPC ]
        Subnets: !If [ DeployNewECSCluster, !GetAtt ["ECSFargateClusterStack", "Outputs.PrivateSubnets"], !Join [",", !Ref ExistentECSClusterPrivateSubnets] ]
        S3ConfigBucket: !Ref S3ConfigBucket

  CloudBenchStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployCloudBench
    Properties:
      TemplateURL: ./CloudBench.yaml
      Parameters:
        ECSCluster: !If [ DeployNewECSCluster, !GetAtt [ "ECSFargateClusterStack", "Outputs.ClusterName" ], !Ref ExistentECSCluster ]
        VPC: !If [ DeployNewECSCluster, !GetAtt [ "ECSFargateClusterStack", "Outputs.VPC" ], !Ref ExistentECSClusterVPC ]
        Subnets: !If [ DeployNewECSCluster, !GetAtt [ "ECSFargateClusterStack", "Outputs.PrivateSubnets" ], !Join [ ",", !Ref ExistentECSClusterPrivateSubnets ] ]
        SysdigSecureEndpoint: !Ref SysdigSecureEndpointParameter
        SysdigSecureAPIToken: !Ref SysdigSecureAPITokenParameter
        S3ConfigBucket: !Ref S3ConfigBucket

