AWSTemplateFormatVersion: "2010-09-09"
Transform: 'AWS::Serverless-2016-10-31'
Description: ECS Image Scanning with Sysdig Secure - Inline Mode

Parameters:
  SysdigSecureAPIToken:
    Type: AWS::SSM::Parameter::Value<String>
    Description: "Enter your Sysdig Secure API Token"
    Default: SysdigSecureAPIToken
  SysdigSecureEndpoint:
    Type: AWS::SSM::Parameter::Value<String>
    Description: "Enter your Sysdig Secure Endpoint"
    Default: SysdigSecureEndpoint

Resources:
  Lambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: scan_image.handler
      Runtime: python3.8
      CodeUri: ./inline-scanning-lambda/lambda.zip
      Timeout: 60
      Environment:
        Variables:
          CODE_BUILD_PROJECT_NAME: !Ref BuildProject
      Events:
        CloudWatch:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
                - "aws.ecs"
              detail-type:
                - "ECS Task State Change"
              detail:
                desiredStatus:
                  - RUNNING
                lastStatus:
                  - PROVISIONING
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "logs:CreateLogGroup"
              Resource:
                - "arn:aws:logs:*:*:*"
            - Effect: Allow
              Action:
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource:
                - "arn:aws:logs:*:*:log-group:/aws/lambda/*:*"
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "codebuild:StartBuild"
              Resource:
                - !GetAtt BuildProject.Arn
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "ecs:DescribeTaskDefinition"
              Resource:
                - "*"
    Metadata:
      BuildMethod: makefile

  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Description: "IAM::Role which allows to run the CodeBuild Job to perform the ECS scanning"
      Path: /
      Policies:
        - PolicyName: LogsPublisher
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - "arn:aws:logs:*:*:log-group:build"
                  - "arn:aws:logs:*:*:log-group:build:*"

        - PolicyName: CodeBuildPublisher
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub "arn:aws:logs:*:*:log-group:/aws/codebuild/${AWS::StackName}-BuildProject"
                  - !Sub "arn:aws:logs:*:*:log-group:/aws/codebuild/${AWS::StackName}-BuildProject:*"
              - Effect: Allow
                Action:
                  - "codebuild:CreateReportGroup"
                  - "codebuild:CreateReport"
                  - "codebuild:UpdateReport"
                  - "codebuild:BatchPutTestCases"
                Resource:
                  - !Sub "arn:aws:codebuild:*:*:report-group/${AWS::StackName}-BuildProject-*"

        - PolicyName: ParameterReader
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ssm:DescribeParameters"
                  - "ssm:GetParameter"
                  - "ssm:GetParameters"
                Resource:
                  - "arn:aws:ssm:*:*:parameter/SysdigSecureAPIToken"
              - Effect: Allow
                Action:
                  - "ssm:DescribeParameters"
                  - "ssm:GetParameter"
                  - "ssm:GetParameters"
                Resource:
                  - "arn:aws:ssm:*:*:parameter/SysdigSecureEndpoint"
        - PolicyName: SecretsReader
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "kms:Decrypt"
                  - "secretsmanager:GetSecretValue"
                Resource:
                  - "*"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-BuildProject"
      Description: "CodeBuild project which scans images using inline technology in ECS using Sysdig Secure"
      ServiceRole: !Ref ServiceRole
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:3.0
        PrivilegedMode: true
      Source:
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2

          env:
            variables:
              SCAN_IMAGE_NAME: "quay.io/sysdig/secure-inline-scan:2"
            parameter-store:
              SYSDIG_SECURE_TOKEN: SysdigSecureAPIToken
              SYSDIG_SECURE_ENDPOINT: SysdigSecureEndpoint

          phases:

            build:
              commands:
              - |
                if [ "$DOCKER_USER" != "" ] ; then
                  docker run --rm $SCAN_IMAGE_NAME --sysdig-url $SYSDIG_SECURE_ENDPOINT --sysdig-token $SYSDIG_SECURE_TOKEN --registry-auth-basic "${DOCKER_USER}:${DOCKER_PASS}" $REPOSITORY
                else
                  docker run --rm $SCAN_IMAGE_NAME --sysdig-url $SYSDIG_SECURE_ENDPOINT --sysdig-token $SYSDIG_SECURE_TOKEN $REPOSITORY
                fi
