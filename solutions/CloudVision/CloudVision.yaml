AWSTemplateFormatVersion: "2010-09-09"
Description: Sysdig CloudVision for AWS

Parameters:
  CloudBenchDeploy:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: >
      Choose if you want to deploy the CloudBench for Cloud Benchmarks.
    Default: "Yes"

  CloudConnectorDeploy:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: >
      Choose if you want to deploy the CloudConnector for CloudTrail
    Default: "Yes"

  ECRImageScanningDeploy:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: >
      Choose if you want to deploy the ECR Repository Image Scanning feature
    Default: "Yes"

  ECRImageScanningMode:
    Type: String
    AllowedValues:
      - "Inline"
      - "Backend"
    Description: >
      Choose how the scan will be performed. If choose Inline it will use AWS
      infrastructure and don't need outside access, this option makes scan
      faster. If choose Backend it will be done on Sysdig's infrastructure.
    Default: "Inline"

  ECSImageScanningDeploy:
    Type: String
    AllowedValues:
      - "Yes"
      - "No"
    Description: >
      Choose if you want to deploy the ECS Image Scanning feature
    Default: "Yes"

  ECSImageScanningMode:
    Type: String
    AllowedValues:
      - "Inline"
      - "Backend"
    Description: >
      Choose how the scan will be performed. If choose Inline it will use AWS
      infrastructure and don't need outside access, this option makes scan
      faster. If choose Backend it will be done on Sysdig's infrastructure.
    Default: "Inline"

  ExistentECSCluster:
    Type: String
    Description: Enter ECS Fargate Cluster where deploy the CloudVision workload if you don't want to create a new one
    Default: ""
  ExistentECSClusterVPC:
    Type: String
    Description: Enter VPC where the CloudVision workload will be deployed if you don't want to create a new cluster
    Default: ""
  ExistentECSClusterPublicSubnets:
    Type: List<String>
    Description: Enter Public Subnets where the CloudVision LoadBalancers will be deployed if you don't want to create a new cluster
    Default: ""
  ExistentECSClusterPrivateSubnets:
    Type: List<String>
    Description: Enter Private Subnets where the CloudVision workload will be deployed if you don't want to create a new cluster
    Default: ""

  SysdigSecureAPIToken:
    Type: String
    Description: Enter your Sysdig Secure API Token
    NoEcho: true
  SysdigSecureEndpoint:
    Type: String
    Description: Enter your Sysdig Secure Endpoint
    Default: "https://secure.sysdig.com"

Conditions:
  DeployECRImageScanning: !Equals [!Ref ECRImageScanningDeploy, "Yes"]
  DeployECRInlineImageScanning: !And
    - !Condition DeployECRImageScanning
    - !Equals [!Ref "ECRImageScanningMode", "Inline"]
  DeployECRBackendImageScanning: !And
    - !Condition DeployECRImageScanning
    - !Equals [!Ref "ECRImageScanningMode", "Backend"]

  DeployCloudConnector: !Equals [!Ref CloudConnectorDeploy, "Yes"]
  DeployCloudBench: !Equals [ !Ref CloudBenchDeploy, "Yes" ]
  RequiresNewECSCluster:
    Fn::Or:
      - Fn::Equals:
        - !Ref ExistentECSCluster
        - ""
      - Fn::Equals:
        - !Ref ExistentECSClusterVPC
        - ""
      - Fn::Equals:
        - !Join [",", !Ref ExistentECSClusterPublicSubnets]
        - ""
      - Fn::Equals:
        - !Join [",", !Ref ExistentECSClusterPrivateSubnets]
        - ""
  DeployNewECSCluster: !And
       - !Or
         - !Condition DeployCloudConnector
         - !Condition DeployCloudBench
       - !Condition RequiresNewECSCluster

  DeployECSImageScanning: !Equals [!Ref ECSImageScanningDeploy, "Yes"]
  DeployECSInlineImageScanning: !And
    - !Condition DeployECSImageScanning
    - !Equals [!Ref "ECSImageScanningMode", "Inline"]
  DeployECSBackendImageScanning: !And
    - !Condition DeployECSImageScanning
    - !Equals [!Ref "ECSImageScanningMode", "Backend"]

Resources:
  SysdigSecureAPITokenParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: SysdigSecureAPIToken
      Description: "Sysdig Secure API Token"
      Type: String
      Value: !Ref SysdigSecureAPIToken

  SysdigSecureEndpointParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: SysdigSecureEndpoint
      Description: "Sysdig Secure endpoint"
      Type: String
      Value: !Ref SysdigSecureEndpoint

  ECRInlineImageScanningStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployECRInlineImageScanning
    Properties:
      TemplateURL: ../ECRImageScanning/Inline/Inline.yaml
      Parameters:
        SysdigSecureAPIToken: !Ref SysdigSecureAPITokenParameter
        SysdigSecureEndpoint: !Ref SysdigSecureEndpointParameter

  ECRBackendImageScanningStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployECRBackendImageScanning
    Properties:
      TemplateURL: ../ECRImageScanning/Backend/Backend.yaml

  ECSInlineImageScanningStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployECSInlineImageScanning
    Properties:
      TemplateURL: ../ECSImageScanning/Inline/Inline.yaml
      Parameters:
        SysdigSecureAPIToken: !Ref SysdigSecureAPITokenParameter
        SysdigSecureEndpoint: !Ref SysdigSecureEndpointParameter

  ECSBackendImageScanningStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployECSBackendImageScanning
    Properties:
      TemplateURL: ../ECSImageScanning/Backend/Backend.yaml

  ECSFargateClusterStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployNewECSCluster
    Properties:
      TemplateURL: ../ECSFargateCluster/ECSFargateCluster.yaml

  CloudConnectorStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployCloudConnector
    Properties:
      TemplateURL: ../CloudConnector/CloudConnector.yaml
      Parameters:
        ECSCluster: !If [ DeployNewECSCluster, !GetAtt ["ECSFargateClusterStack", "Outputs.ClusterName"], !Ref ExistentECSCluster ]
        VPC: !If [ DeployNewECSCluster, !GetAtt ["ECSFargateClusterStack", "Outputs.VPC"], !Ref ExistentECSClusterVPC ]
        PublicSubnets: !If [ DeployNewECSCluster, !GetAtt ["ECSFargateClusterStack", "Outputs.PublicSubnets"], !Join [",", !Ref ExistentECSClusterPublicSubnets] ]
        PrivateSubnets: !If [ DeployNewECSCluster, !GetAtt ["ECSFargateClusterStack", "Outputs.PrivateSubnets"], !Join [",", !Ref ExistentECSClusterPrivateSubnets] ]

  CloudBenchStack:
    Type: AWS::CloudFormation::Stack
    Condition: DeployCloudBench
    Properties:
      TemplateURL: ../CloudBench/CloudBench.yaml
      Parameters:
        ECSCluster: !If [ DeployNewECSCluster, !GetAtt [ "ECSFargateClusterStack", "Outputs.ClusterName" ], !Ref ExistentECSCluster ]
        VPC: !If [ DeployNewECSCluster, !GetAtt [ "ECSFargateClusterStack", "Outputs.VPC" ], !Ref ExistentECSClusterVPC ]
        PublicSubnets: !If [ DeployNewECSCluster, !GetAtt [ "ECSFargateClusterStack", "Outputs.PublicSubnets" ], !Join [ ",", !Ref ExistentECSClusterPublicSubnets ] ]
        PrivateSubnets: !If [ DeployNewECSCluster, !GetAtt [ "ECSFargateClusterStack", "Outputs.PrivateSubnets" ], !Join [ ",", !Ref ExistentECSClusterPrivateSubnets ] ]
        SysdigSecureEndpoint: !Ref SysdigSecureEndpointParameter
        SysdigSecureAPIToken: !Ref SysdigSecureAPITokenParameter
